create table pixel as
select
  row_number() over (partition by line_number) as x,
  line_number as y,
  value
from input, regexp_split_to_table(line, '') as value;

create table galaxy as
select x, y
from pixel
where value = '#';

create table empty_line as
select x, null as y
from pixel
group by x
having every(value = '.')
union all
select null, y
from pixel
group by y
having every(value = '.');

create function compute_solution(expansion_rate bigint) returns bigint return (
  select sum(abs(galaxy_2.x - galaxy_1.x) + abs(galaxy_2.y - galaxy_1.y) + expansion * expansion_rate)
  from galaxy as galaxy_1
  join galaxy as galaxy_2 on
    -- filter out pairs of the same galaxy
    (galaxy_1.x, galaxy_1.y) <> (galaxy_2.x, galaxy_2.y)
    -- filter out identical pairs when ignoring order
    and (
      galaxy_1.y < galaxy_2.y
      or galaxy_1.y = galaxy_2.y
      and galaxy_1.x > galaxy_2.x
    )
  cross join lateral (
    select count(*) as expansion
    from empty_line
    where
      x between symmetric galaxy_1.x and galaxy_2.x
      or y between symmetric galaxy_1.y and galaxy_2.y
  )
);
