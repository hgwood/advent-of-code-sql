create function distinct_items(items text) returns setof text
  begin atomic;
    select distinct item
    from regexp_split_to_table(items, '') as _ (item);
  end;

create function find_common_item(item_sets text[]) returns text
  return (
    select item
    from
      unnest(item_sets) as items (items),
      distinct_items(items) as item (item)
    group by item
    having count(*) = array_length(item_sets, 1)
  );

create function priority(item_type text) returns int 
  return (
    case regexp_like(item_type, '[a-z]')
      when true then ascii(item_type) - 97 + 1
      else ascii(item_type) - 65 + 27
    end
  );
